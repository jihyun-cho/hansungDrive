/** koti 맵 */var _MAP;/** 구분자1 */var _ATTR_SPLIT="(-gas-)";/** 구분자2 */var _LAYER_SPLIT="(-gls-)";/** 바운더리최적화를 위한 레이어 *///var G_boundLayer;/** 일반 마커 레이어 */var _MARKER_LAYER;/** 일반 마커 */var _MARKER = [];	// 라벨 제거용/** 강조 마커 레이어 */var _MARKER_LAYER2;/** 강조 마커 */var _MARKER2;	/** 백터 레이어 */var _VECTOR_LAYER;var _VECTOR_LAYER2;/** 폴리라인 */var _LINE_FEATURE;/** 써클형 폴리곤 */var _CIRCLE_FEATURE;/** 포인트 */var _POINT_FEATURE1;var _POINT_FEATURE2;/** * 맵 초기로드 *@author 조지현j  */function initMap( ) {	var w = document.documentElement.clientWidth;	var h = $('#pop_content').height() -$('.data').height() -20;	_MAP = new Tmap.Map({		div : 'map_div'		, width : w+"px"		, height : h+"px"		, displayProjection: new Tmap.Projection("EPSG:4326")		//, animation:true		//, singleTile: true		, transitionEffect: 'resize'		, minZoom:5		, maxZoom:20		});	_MAP.setCenter(new Tmap.LonLat(14135893.887852, 4518348.1852606), 15);	_MAP.addControls([		//new Tmap.Control.KeyboardDefaults(),		//new Tmap.Control.OverviewMap(),		new Tmap.Control.MousePosition()	]);		//setLayer();	//setMarker();}/** * 맵 리사이징  * @author 조지현j */function mapResizeBrowser() {	var w = $('html').width();	var h = $('#pop_content').height() -$('.data').height() -20;	if (_MAP) {		$('#map_div').css('width',	w + "px");		$('#map_div').css('height', h + "px");		_MAP.updateSize();	}};/** * 마커레이어 세팅  * @author 조지현j */function setMarker() {	if (!_MARKER_LAYER) {		_MARKER_LAYER = new Tmap.Layer.Markers("markerLayer");		_MAP.addLayer(_MARKER_LAYER);	}	if (!_MARKER_LAYER2) {		_MARKER_LAYER2 = new Tmap.Layer.Markers("markerLayer2");		_MAP.addLayer(_MARKER_LAYER2);	}}/** * 백터레이어 세팅  * @author 조지현j */function setLayer() {	if (!_VECTOR_LAYER) {		_VECTOR_LAYER = new Tmap.Layer.Vector("vectorLayer" );		_MAP.addLayer(_VECTOR_LAYER);	}	if (!_VECTOR_LAYER2) {		_VECTOR_LAYER2 = new Tmap.Layer.Vector("vectorLayer2" );		_MAP.addLayer(_VECTOR_LAYER2);	}}/** * 일반 마커레이어 초기화 (+일반마커)  * @author 조지현j */function initMarker() {	if (_MARKER.length != 0) {		/*		 * ## 마커 리소스 지우는 소스 		 * for(var i = 0; i<_MARKER_LAYER.markers.length; i++){		 *     _MARKER_LAYER.markers[0].destroy(); 		 * }		 */		_MARKER_LAYER.clearMarkers();		_MAP.removeLayer(_MARKER_LAYER); // 맵 삭제		_MARKER_LAYER.destroy(); // 메모리 삭제		_MARKER_LAYER = null; // 		// label 지우기 위한 for 문, 상관없으나 다른프로젝트의 호환차 소스작성		for ( var i = 0; i < _MARKER.length; i++) {			if (typeof _MARKER[i].popup != "undefined") {				_MAP.removePopup(_MARKER[i].popup);			}		}		_MARKER = [];	}}/** * 강조 마커레이어 초기화  * @author 조지현j */function initMarker2() {	if (_MARKER_LAYER2.markers.length != 0) {		_MARKER_LAYER2.removeMarker(_MARKER2);	}}/** * 백터레이어 초기화  * @author 조지현j */function initVector() {	if (_VECTOR_LAYER) {		_VECTOR_LAYER.removeAllFeatures();		_MAP.removeLayer(_VECTOR_LAYER);		_VECTOR_LAYER.destroy();		_VECTOR_LAYER = null;	}}/** * 백터레이어2 초기화  * @author 조지현j */function initVector2() {	if (_VECTOR_LAYER2) {		_VECTOR_LAYER2.removeAllFeatures();		_MAP.removeLayer(_VECTOR_LAYER2);		_VECTOR_LAYER2.destroy();		_VECTOR_LAYER2 = null;	}}/** * 라인백터 추가 * @author 조지현 */function addPoint( attr ) {		var LL;	var style = {		     fillColor: attr.color		     , fillOpacity:0.6		     , strokeColor: attr.color		     , strokeWidth: 0.4		     , pointRadius: 5		};			if ( attr.lon.toString().indexOf(_ATTR_SPLIT) < 0 ) {			LL = tranceWtoM(attr.lon, attr.lat );		var point = new Tmap.Geometry.Point(LL.lon, LL.lat);				if ( attr.vtIdx == 1) {			_POINT_FEATURE1 = new Tmap.Feature.Vector(point , null , style);			_VECTOR_LAYER.addFeatures(_POINT_FEATURE1);			} else {			_POINT_FEATURE2 = new Tmap.Feature.Vector(point , null , style);			_VECTOR_LAYER2.addFeatures(_POINT_FEATURE2);		}	} else {				for ( var i = 0; i < attr.lon.split(G_attrSplit).length; i++) {			//log("lon,lat : " + attr.lon.split(G_attrSplit)[i] + "," + attr.lat.split(G_attrSplit)[i] );			LL = tranceWtoM(attr.lon.split(G_attrSplit)[i], attr.lat.split(G_attrSplit)[i]);					var point = new Tmap.Geometry.Point(LL.lon, LL.lat);						if ( attr.vtIdx == 1) {				_POINT_FEATURE1 = new Tmap.Feature.Vector(point , null , style);				_VECTOR_LAYER.addFeatures(_POINT_FEATURE1);				} else {				_POINT_FEATURE2 = new Tmap.Feature.Vector(point , null , style);				_VECTOR_LAYER2.addFeatures(_POINT_FEATURE2);			}		}			}}/** * 마커 추가 * @author 조지현 */function addMarker( lon , lat , labelContent , ico  ) {	//log("addMarker(" + lon + "," + lat +  "," + labelContent +   "," + ico +  ")");	var size;	var offset;	var iconStyle;	var icon;		if (ico == 'pr' ) {		size = new Tmap.Size(22, 22);		offset = new Tmap.Pixel(-(size.w / 2), -(size.h / 2));		iconStyle = '/images/ico_tracking.png';		icon = new Tmap.Icon(iconStyle, size, offset);					} else if ( ico == 'st' ) { 		size = new Tmap.Size(29, 58);		offset = new Tmap.Pixel(-(size.w / 2), -(size.h)+6);		iconStyle = '/images/ico_marker_st.png';		icon = new Tmap.Icon(iconStyle, size, offset);						} else  if ( ico == 'ed' ) {  		size = new Tmap.Size(29, 58);		offset = new Tmap.Pixel(-(size.w / 2), -(size.h)+6);		iconStyle = '/images/ico_marker_ed.png';		icon = new Tmap.Icon(iconStyle, size, offset);				}		var LL;	var theMarker;		if ( labelContent ) {		var labelStyle = '<font style=';		labelStyle += '"';		labelStyle +=	'color: 0x000000;';		labelStyle += 'font-family:\'돋움체\';';		labelStyle += 'font-size: 11px;';		labelStyle += '">';		labelStyle += labelContent + '</font>';				var label = new Tmap.Label("<div>" + labelStyle + "</div>");		LL = new tranceWtoM(lon , lat , label  );			theMarker = new Tmap.Markers(LL, icon,label);	} else {		LL = new tranceWtoM(lon , lat );		theMarker = new Tmap.Markers(LL, icon);	}			_MARKER_LAYER.addMarker(theMarker);	_MARKER.push(theMarker);		if ( labelContent ) {		//theMarker.popup.updateSize();		theMarker.popup.setBackgroundColor("#FFF0F5");		theMarker.events.register("mouseover", theMarker.popup, function(){this.show();});		theMarker.events.register("mouseout", theMarker.popup, function(){this.hide();});	}		/*	 * theMarker.popup.updateSize(); theMarker.popup.show();	 */}/** * 라인백터 추가 * @author 조지현 */function addLine(lon, lat, color) {		//log("addLine ( \nlon : " + lon + "\nlat : " + lat + "\ncolor : " + color + "\n)");		var pointList = [];	var LL;		for ( var i = 0; i < lon.split(G_attrSplit).length; i++) {		LL = tranceWtoM(lon.split(G_attrSplit)[i], lat.split(G_attrSplit)[i]);		pointList.push(new Tmap.Geometry.Point(LL.lon, LL.lat));	}	var lineString = new Tmap.Geometry.LineString(pointList);	var style = {		strokeColor : color,		strokeWidth : 4	};	_LINE_FEATURE = new Tmap.Feature.Vector(lineString, null, style);	_VECTOR_LAYER.addFeatures(_LINE_FEATURE);}/** * 레이어 바운더리 최적화 -   * @author 조지현 */function getDataExtent( pointFlag ) {	if ( pointFlag ) {				var bounds = new Tmap.Bounds();		bounds.extend ( _VECTOR_LAYER.getDataExtent() );		bounds.extend ( _VECTOR_LAYER2.getDataExtent() );		_MAP.zoomToExtent( bounds );			} else {		if (_VECTOR_LAYER != null) {			if (_VECTOR_LAYER.getDataExtent() != null	&& _MARKER_LAYER.getDataExtent() != null) {				_MAP.zoomToExtent(_VECTOR_LAYER.getDataExtent());			} else if (_VECTOR_LAYER.getDataExtent() != null	&& _MARKER_LAYER.getDataExtent() == null) {				_MAP.zoomToExtent(_VECTOR_LAYER.getDataExtent());			} else if (_VECTOR_LAYER.getDataExtent() == null && _MARKER_LAYER.getDataExtent() != null) {				_MAP.zoomToExtent(_MARKER_LAYER.getDataExtent());			}		} else {			if (_VECTOR_LAYER == null && _MARKER_LAYER.getDataExtent() != null) {				_MAP.zoomToExtent(_VECTOR_LAYER.getDataExtent());			}		}	}		// z-index 세팅	if (_MARKER_LAYER != null && _VECTOR_LAYER != null)	_MARKER_LAYER.setZIndex(parseInt(_VECTOR_LAYER.getZIndex()) + 10);	if (_MARKER_LAYER2 != null && _MARKER_LAYER != null)	_MARKER_LAYER2.setZIndex(parseInt(_MARKER_LAYER.getZIndex()) + 10);}/** * 좌표변환 * @author 조지현 */function tranceWtoM(lon, lat) {	return new Tmap.LonLat(lon, lat).transform(new Tmap.Projection("EPSG:4326"), new Tmap.Projection("EPSG:3857"));}function tranceMtoW(lon, lat) {	return new Tmap.LonLat(lon, lat).transform(new Tmap.Projection("EPSG:3857"), new Tmap.Projection("EPSG:4326"));}/** * 맵 세팅  * @author 조지현j */function setMap(type, markerAttr  , vectorAttr ) {		setLayer();	setMarker();		var a = {};		if (type == 'marker') {				a = markerAttr;		if ( a.labelFlag == true ) {			addMarker( a.lon , a.lat , a.labelContent ,a.ico );		} else {			addMarker( a.lon , a.lat );		}			} else if (type == "vector") {		a= vectorAttr;		if (a.feature  == "line") {			addLine(a.lon, a.lat, a.color );		} else if (a.feature  == "point") {			addPoint( a  );		}	}}